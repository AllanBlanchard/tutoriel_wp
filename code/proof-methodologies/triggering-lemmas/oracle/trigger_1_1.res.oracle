# frama-c -wp [...]
[kernel] Parsing trigger_1_1.c (with preprocessing)
[wp] Running WP plugin...
[kernel:annot:missing-spec] trigger_1_1.c:22: Warning: 
  Neither code nor explicit exits and terminates for function g,
   generating default clauses. See -generated-spec-* options for more info
[wp] Warning: Missing RTE guards
[wp] 3 goals scheduled
[wp] [Valid] typed_example_terminates (Qed)
[wp] [Unsuccess] typed_example_ensures (Alt-Ergo) (Cached)
[wp] [Valid] typed_example_exits (Qed)
[wp] Proved goals:    2 / 3
  Qed:             2
  Unsuccess:       1
------------------------------------------------------------
  Function example
------------------------------------------------------------

Goal Termination-condition (generated) in 'example':
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------

Goal Post-condition (file trigger_1_1.c, line 27) in 'example':
Assume {
  (* Heap *)
  Type: (region(x@L1.base) <= 0) /\ (region(y@L1.base) <= 0).
  Stmt { L1:  }
  (* Pre-condition *)
  Have: y@L1 != x@L1.
  (* Pre-condition *)
  Have: P_P(µ:Msint32@L1, x@L1).
  Stmt { *y@L1 = `v;  }
  Stmt { L3:  }
}
Prove: P_Q(µ:Msint32@L3, x@L1).
Prover Alt-Ergo returns Unsuccess

------------------------------------------------------------

Goal Exit-condition (generated) in 'example':
Prove: true.
Prover Qed returns Valid

------------------------------------------------------------
[wp:pedantic-assigns] trigger_1_1.c:29: Warning: 
  No 'assigns' specification for function 'example'.
  Callers assumptions might be imprecise.
